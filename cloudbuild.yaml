steps:
# Get ENCRYPTION_KEY
- name: gcr.io/cloud-builders/gcloud
  entrypoint: 'bash'
  args: [ '-c','gcloud secrets versions access latest --secret=ENCRYPTION_KEY > ENCRYPTION_KEY' ]
# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - >
    docker build
    -t gcr.io/$PROJECT_ID/server:latest
    --cache-from gcr.io/$PROJECT_ID/server:latest
    --build-arg ENCRYPTION_KEY=$(<ENCRYPTION_KEY)
    --build-arg VERCEL_GITHUB_COMMIT_REF=$BRANCH_NAME
    --build-arg VERCEL_GITHUB_COMMIT_SHA=$COMMIT_SHA
    --build-arg SENTRY_ORG=simon-farshid
    --build-arg SENTRY_PROJECT=correctly
    --build-arg SENTRY_AUTH_TOKEN=39c565a2420246aab2a7141d2d4038dc6b1f6e67b59b44428be65d6d7b15d968
    .
# Push the container image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/server:latest']
# Deploy container image to Cloud Run
- name: gcr.io/cloud-builders/gcloud
  args: [
    'run', 'deploy', 
    'server', 
    '--image', 'gcr.io/$PROJECT_ID/server:latest', 
    '--region', 'europe-west4', 
    '--platform', 'managed',
    '--set-env-vars', 'VERCEL_GITHUB_COMMIT_REF=$BRANCH_NAME,VERCEL_GITHUB_COMMIT_SHA=$COMMIT_SHA',
    '--allow-unauthenticated'
  ]
images: ['gcr.io/$PROJECT_ID/server:latest']